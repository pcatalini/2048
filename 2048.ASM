.MODEL	SMALL
.STACK 100H
.DATA

VET  	DB   1,1,1,1
        DB   1,1,1,1
		DB 	 1,1,1,1
		DB   1,1,1,1
		
;variaveis string com todas as mensagens para o usuario

MSG1		DB		0Ah,0Dh,'GAME OVER $'
MSG2		DB 		0Ah,0Dh,'WELL DONE! $'
MSG3		DB 		0Ah,0Dh,'DO YOU WANT TO PLAY AGAIN (Y/N)? $'
MSG4		DB 		0Ah,0Dh,'YOU MADE: $'
MSG5		DB 		" PLAYS! $"		
MSG6		DB		0Ah,0Dh,'     PUC-CAMPINAS - BRAZIL - 2016 $'		
MSG7		DB		0Ah,0Dh,'	  WELCOME TO 2048! $'		
MSG8		DB		0Ah,0Dh,'        USE THE KEYS <W A S D> $'
MSG9		DB		0Ah,0Dh,' PRESS ANY KEY TO START PRESS 0 TO QUIT $'
MSG10		DB		0Ah,0Dh,' DEVELLOPED BY                           PEDRO CATALINI                          RICARDO OLIVEIRA $'
;variables of general propouse
			
LOOP1	DW	 1
LOOP2	DW	 0
LOOP3   DW	 0
FLAG1	DB	 2
FLAG2	DB	 1
FLAG3	DB	 1
JOGADAS DW  0
TESTE1  DB 	0
TESTET  DB 	0

AUXDH	 DW	 0		
AUXDL	 DW	 0
AUXAUXDH DW	 0	
AUXAUXDL DW  0
COUNT 	 DW  0
COUNT2	 DW	 0		
NN2E4	 DW  0

MENOR	DB	 0
MAIOR 	DB   0
	
;aux de cordenadas
NUMX		DW		0
NUMY		DW		0
NUMXSOMA	DW		0
NUMYSOMA	DW		0	
;aux tipo de numero
TIPO		DB		0
COR			DB		0


;mapa de numeros



NUM2  	DB     495 DUP(0),8 DUP(1),32 DUP(0)
		DB     8 DUP(1),32 DUP(0)
		DB     8 DUP(1),37 DUP(0)
		DB     1,1,1,37 DUP(0)
		DB     1,1,1,37 DUP(0)
		DB     1,1,1,32 DUP(0)
		DB     8 DUP(1),32 DUP(0)
		DB     8 DUP(1),32 DUP(0)
		DB     8 DUP(1),32 DUP(0)
		DB     1,1,1,37 DUP(0)
		DB     1,1,1,37 DUP(0)
		DB     1,1,1,37 DUP(0)
		DB     8 DUP(1),32 DUP(0)
		DB     8 DUP(1),32 DUP(0)
		DB     8 DUP(1),537 DUP(0)
	
NUM4  	DB 495 DUP(0),1,1,1,0,0,1,1,1,32 DUP(0)
		DB 1,1,1,0,0,1,1,1,32 DUP(0)
		DB 1,1,1,0,0,1,1,1,32 DUP(0)
		DB 1,1,1,0,0,1,1,1,32 DUP(0)
		DB 1,1,1,0,0,1,1,1,32 DUP(0)
		DB 1,1,1,0,0,1,1,1,32 DUP(0)
		DB 1,1,1,0,0,1,1,1,32 DUP(0)
		DB 8 DUP(1),32 DUP(0)
		DB 8 DUP(1),32 DUP(0)
		DB 8 DUP(1),37 DUP(0)
		DB 1,1,1,37 DUP(0)
		DB 1,1,1,37 DUP(0)
		DB 1,1,1,37 DUP(0)
		DB 1,1,1,37 DUP(0)
		DB 1,1,1,37 DUP(0)
		DB 1,1,1,536 DUP(0)
	
NUM8  	DB 455 DUP(0),10 DUP(1),30 DUP(0)
		DB 10 DUP(1),30 DUP(0)
		DB 10 DUP(1),30 DUP(0)
		DB 1,1,1,4 DUP(0),1,1,1,30 DUP(0)
		DB 1,1,1,4 DUP(0),1,1,1,30 DUP(0) 
		DB 1,1,1,4 DUP(0),1,1,1,30 DUP(0)
		DB 1,1,1,4 DUP(0),1,1,1,30 DUP(0)
		DB 10 DUP(1),30 DUP(0)
		DB 10 DUP(1),30 DUP(0)
		DB 10 DUP(1),30 DUP(0)
		DB 1,1,1,4 DUP(0),1,1,1,30 DUP(0)
		DB 1,1,1,4 DUP(0),1,1,1,30 DUP(0)
		DB 1,1,1,4 DUP(0),1,1,1,30 DUP(0)
		DB 1,1,1,4 DUP(0),1,1,1,30 DUP(0)
		DB 10 DUP(1),30 DUP(0)
		DB 10 DUP(1),30 DUP(0)
		DB 10 DUP(1),576 DUP(0)
	
NUM16 	DB 494 DUP(0),1,1,1,0,0,8 DUP(1),27 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),27 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),27 DUP(0)
		DB 1,1,1,0,0,1,1,1,32 DUP(0)
		DB 1,1,1,0,0,1,1,1,32 DUP(0)
		DB 1,1,1,0,0,1,1,1,32 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),27 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),27 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),27 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,27 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,27 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,27 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),27 DUP(0) 
		DB 1,1,1,0,0,8 DUP(1),27 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),537 DUP(0)
		
NUM32 	DB 491 DUP(0),8 DUP(1),0,0,8 DUP(1),22 DUP(0)
		DB 8 DUP(1),0,0,8 DUP(1),22 DUP(0)
		DB 8 DUP(1),0,0,8 DUP(1),27 DUP(0)
		DB 1,1,1,7 DUP(0),1,1,1,27 DUP(0)
		DB 1,1,1,7 DUP(0),1,1,1,27 DUP(0)
		DB 1,1,1,7 DUP(0),1,1,1,23 DUP(0)
		DB 7 DUP(1),0,0,8 DUP(1),23 DUP(0)
		DB 7 DUP(1),0,0,8 DUP(1),23 DUP(0)
		DB 7 DUP(1),0,0,8 DUP(1),27 DUP(0)
		DB 1,1,1,0,0,1,1,1,32 DUP(0)
		DB 1,1,1,0,0,1,1,1,32 DUP(0)
		DB 1,1,1,0,0,1,1,1,27 DUP(0)
		DB 8 DUP(1),0,0,8 DUP(1),22 DUP(0)
		DB 8 DUP(1),0,0,8 DUP(1),22 DUP(0)
		DB 8 DUP(1),0,0,8 DUP(1),540 DUP(0) 
	
NUM64	DB 491 DUP(0),8 DUP(1),0,0,1,1,1,0,0,1,1,1,22 DUP(0)
		DB 8 DUP(1),0,0,1,1,1,0,0,1,1,1,22 DUP(0)
		DB 8 DUP(1),0,0,1,1,1,0,0,1,1,1,22 DUP(0)
		DB 1,1,1,7 DUP(0),1,1,1,0,0,1,1,1,22 DUP(0)
		DB 1,1,1,7 DUP(0),1,1,1,0,0,1,1,1,22 DUP(0)
		DB 1,1,1,7 DUP(0),1,1,1,0,0,1,1,1,22 DUP(0)
		DB 8 DUP(1),0,0,8 DUP(1),22 DUP(0)
		DB 8 DUP(1),0,0,8 DUP(1),22 DUP(0)
		DB 8 DUP(1),0,0,8 DUP(1),22 DUP(0)
		DB 1,1,1,0,0,1,1,1,7 DUP(0),1,1,1,22 DUP(0)
		DB 1,1,1,0,0,1,1,1,7 DUP(0),1,1,1,22 DUP(0)
		DB 1,1,1,0,0,1,1,1,7 DUP(0),1,1,1,22 DUP(0)
		DB 8 DUP(1),7 DUP(0), 1,1,1,22 DUP(0)
		DB 8 DUP(1),7 DUP(0), 1,1,1,22 DUP(0)
		DB 8 DUP(1),7 DUP(0), 1,1,1,531 DUP(0)

NUM128 	DB 527 DUP(0), 1,1,1,0,0,8 DUP(1),0,0,10 DUP(1),15 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),0,0,10 DUP(1),15 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),0,0,1,1,1,4 DUP(0),1,1,1,15 DUP(0)
		DB 1,1,1,7 DUP(0),1,1,1,0,0,1,1,1,4 DUP(0),1,1,1,15 DUP(0)
		DB 1,1,1,7 DUP(0),1,1,1,0,0,1,1,1,4 DUP(0),1,1,1,15 DUP(0)
		DB 1,1,1,7 DUP(0),1,1,1,0,0,1,1,1,4 DUP(0),1,1,1,15 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),0,0,10 DUP(1),15 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),0,0,10 DUP(1),15 DUP(0)
		DB 1,1,1,0,0,1,1,1,7 DUP(0),1,1,1,4 DUP(0), 1,1,1,15 DUP(0)
		DB 1,1,1,0,0,1,1,1,7 DUP(0),1,1,1,4 DUP(0), 1,1,1,15 DUP(0)
		DB 1,1,1,0,0,1,1,1,7 DUP(0),1,1,1,4 DUP(0), 1,1,1,15 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),0,0,1,1,1,4 DUP(0),1,1,1,15 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),0,0,10 DUP(1),15 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),0,0,10 DUP(1),528 DUP(0)
 
NUM256 	DB 486 DUP(0),8 DUP(1),0,0,8 DUP(1),0,0,9 DUP(1),11 DUP(0)
		DB 8 DUP(1),0,0,8 DUP(1),0,0,9 DUP(1),11 DUP(0)
        DB 8 DUP(1),0,0,8 DUP(1),0,0,9 DUP(1),16 DUP(0)
        DB 1,1,1,0,0,1,1,1,7 DUP(0),1,1,1,22 DUP(0)
        DB 1,1,1,0,0,1,1,1,7 DUP(0),1,1,1,22 DUP(0)
        DB 1,1,1,0,0,1,1,1,7 DUP(0),1,1,1,17 DUP(0)
        DB 8 DUP(1),0,0,8 DUP(1),0,0,9 DUP(1),11 DUP(0)
        DB 8 DUP(1),0,0,8 DUP(1),0,0,9 DUP(1),11 DUP(0)
        DB 8 DUP(1),0,0,8 DUP(1),0,0,9 DUP(1),11 DUP(0)
        DB 1,1,1,12 DUP(0),1,1,1,0,0,1,1,1,0,0,0,1,1,1,11 DUP(0)
        DB 1,1,1,12 DUP(0),1,1,1,0,0,1,1,1,0,0,0,1,1,1,11 DUP(0)
        DB 1,1,1,12 DUP(0),1,1,1,0,0,1,1,1,0,0,0,1,1,1,11 DUP(0)
        DB 8 DUP(1),0,0,8 DUP(1),0,0,9 DUP(1),11 DUP(0)
        DB 8 DUP(1),0,0,8 DUP(1),0,0,9 DUP(1),11 DUP(0)
        DB 8 DUP(1),0,0,8 DUP(1),0,0,9 DUP(1),525 DUP(0) 
        
NUM512	DB 488 DUP(0),8 DUP(1),0,0,1,1,1,0,0,8 DUP(1),17 DUP(0)
		DB 8 DUP(1),0,0,1,1,1,0,0,8 DUP(1),17 DUP(0)
		DB 8 DUP(1),0,0,1,1,1,0,0,8 DUP(1),17 DUP(0)
		DB 1,1,1,7 DUP(0),1,1,1,7 DUP(0),1,1,1,17 DUP(0)
		DB 1,1,1,7 DUP(0),1,1,1,7 DUP(0),1,1,1,17 DUP(0)
		DB 1,1,1,7 DUP(0),1,1,1,7 DUP(0),1,1,1,17 DUP(0)
		DB 8 DUP(1),0,0,1,1,1,0,0,8 DUP(1),17 DUP(0)
		DB 8 DUP(1),0,0,1,1,1,0,0,8 DUP(1),17 DUP(0)
		DB 8 DUP(1),0,0,1,1,1,0,0,8 DUP(1),22 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,27 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,27 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,22 DUP(0)
		DB 8 DUP(1), 0,0,1,1,1,0,0,8 DUP(1),17 DUP(0)
		DB 8 DUP(1), 0,0,1,1,1,0,0,8 DUP(1),17 DUP(0)
		DB 8 DUP(1), 0,0,1,1,1,0,0,8 DUP(1),529 DUP(0)
		
NUM1024 DB 482 DUP(0),1,1,1,0,0,8 DUP(1),0,0,8 DUP(1),0,0,1,1,1,3 DUP(0),1,1,1,6 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),0,0,8 DUP(1),0,0,1,1,1,3 DUP(0),1,1,1,6 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),0,0,8 DUP(1),0,0,1,1,1,3 DUP(0),1,1,1,6 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,7 DUP(0),1,1,1,0,0,1,1,1,0,0,0,1,1,1,6 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,7 DUP(0),1,1,1,0,0,1,1,1,0,0,0,1,1,1,6 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,7 DUP(0),1,1,1,0,0,1,1,1,0,0,0,1,1,1,6 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,7 DUP(0),1,1,1,0,0,1,1,1,0,0,0,1,1,1,6 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,8 DUP(1),0,0,9 DUP(1),6 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,8 DUP(1),0,0,9 DUP(1),6 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,8 DUP(1),0,0,9 DUP(1),6 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,13 DUP(0),1,1,1,6 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,13 DUP(0),1,1,1,6 DUP(0)
		DB 1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,13 DUP(0),1,1,1,6 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),0,0,8 DUP(1),8 DUP(0),1,1,1,6 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),0,0,8 DUP(1),8 DUP(0),1,1,1,6 DUP(0)
		DB 1,1,1,0,0,8 DUP(1),0,0,8 DUP(1),8 DUP(0),1,1,1,524 DUP(0)
	   
NUM2048 DB 480 DUP(0),8 DUP(1),0,0,8 DUP(1),0,0,1,1,1,0,0,0,1,1,1,0,0,8 DUP(1),0
        DB 8 DUP(1),0,0,8 DUP(1),0,0,1,1,1,0,0,0,1,1,1,0,0,8 DUP(1),0
        DB 8 DUP(1),0,0,8 DUP(1),0,0,1,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,6 DUP(0)
        DB 1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,6 DUP(0)
        DB 1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,6 DUP(0)
        DB 1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0
        DB 8 DUP(1),0,0,1,1,1,0,0,1,1,1,0,0,9 DUP(1),0,0,8 DUP(1),0
        DB 8 DUP(1),0,0,1,1,1,0,0,1,1,1,0,0,9 DUP(1),0,0,8 DUP(1),0
        DB 8 DUP(1),0,0,1,1,1,0,0,1,1,1,0,0,9 DUP(1),0,0,8 DUP(1),0
        DB 1,1,1,7 DUP(0),1,1,1,0,0,1,1,1,8 DUP(0),1,1,1,0,0,1,1,1,0,0,1,1,1,0
        DB 1,1,1,7 DUP(0),1,1,1,0,0,1,1,1,8 DUP(0),1,1,1,0,0,1,1,1,0,0,1,1,1,0
        DB 1,1,1,7 DUP(0),1,1,1,0,0,1,1,1,8 DUP(0),1,1,1,0,0,1,1,1,0,0,1,1,1,0
        DB 1,1,1,7 DUP(0),1,1,1,0,0,1,1,1,8 DUP(0),1,1,1,0,0,1,1,1,0,0,1,1,1,0
        DB 8 DUP(1),0,0,8 DUP(1),8 DUP(0),1,1,1,0,0,8 DUP(1),0
        DB 8 DUP(1),0,0,8 DUP(1),8 DUP(0),1,1,1,0,0,8 DUP(1),0
        DB 8 DUP(1),0,0,8 DUP(1),8 DUP(0),1,1,1,0,0,8 DUP(1),521 DUP(0)
               		                                                                  			
.CODE

MAIN PROC
	;STRING
     MOV AX,@DATA
	 MOV DS,AX
	 
	 ;MOV AH,0
	 MOV Ax,13H
	 INT 10H
	 CALL MENU
	 
	MAINNOVAMENTE:
	
	CALL LUGAR
	
	MAINTOPO:
	CALL PRINTA
	CALL DELAY
	CMP FLAG1,1
	JE MAINFLAG1
	CALL LUGAR
	MAINFLAG1:
	MOV FLAG1,1
	CALL PRINTA
	CALL WINORLOSE
	MOV AH,1
	INT 21H
	CMP AL,'0'
	JE FIM
	CMP AL,'w'
	JE CIMA
	CMP AL,'s'
	JE BAIXO
	CMP AL,'a'
	JE ESQUERDA
	CMP AL,'d'
	JE DIREITA
	JMP MAINSAI
	CIMA:
	CALL CIM
	JMP MAINSAI
	
	BAIXO:
	CALL BAI
	JMP MAINSAI
;	
	ESQUERDA:
	CALL ESQ
	JMP MAINSAI
	
	DIREITA:
	CALL DIR
	
	MAINSAI:

	INC JOGADAS
	JMP MAINTOPO
	
	FIM:
	MOV Ax,03H
	INT 10H
	MOV AH,4CH
	INT 21H


MAIN ENDP

PROC PRINTA
	CALL MATRIZ
	MOV LOOP3,0
	MOV LOOP2,0	;Y
	MOV LOOP1,0 ;X
	LEA DI,VET
	PRILOOP1:
	MOV DL,[DI]
	MOV TIPO,DL
	MOV DL,0
	MOV DX,LOOP1
	MOV NUMX,DX
	MOV DL,0
	MOV DX,LOOP2
	MOV NUMY,DX	
	CALL NUM
	
	;INC LOOP1
	INC LOOP1
	INC DI
	CMP LOOP1,4
	JNE PRILOOP1
	
	INC LOOP2
	MOV LOOP1,0
	ADD LOOP3,4
	LEA DI,VET
	ADD DI,LOOP3
	
	CMP LOOP2,4
	JNE PRILOOP1
	
	RET
PRINTA ENDP

PROC MATRIZ
	;configuração do background
	MOV LOOP1,0
	MOV LOOP2,0
    MOV BH,25 	;4 primeiros - background, 4 ultimos fonte.  
    MOV CL,0B	;x canto superior esquerdo  
    MOV CH,0B	;y canto superior esquerdo
    MOV DL,10000000B	;x canto inferior direito 2X maior que y
    MOV DH,1000000B  
	
	MOV AX, 0600h
	INT 10h

	;configuração inicial dos quadrados da matriz
	MOV LOOP1,0
	MOV LOOP2,0
    MOV BH,26  	;4 primeiros - background, 4 ultimos fonte.  
    MOV CL,0B	;x canto superior esquerdo  
    MOV CH,0B	;y canto superior esquerdo
    MOV DL,100B	;x canto inferior direito 2X maior que y
    MOV DH,100B    ;y canto inferior direito      
 
	MATLOOP1:
	 MOV AX, 0600h
	 INT 10h	 
     ADD CL,0110B	;x canto superior esquerdo  
     ADD DL,0110B	;x canto inferior direito 2X maior que y    
    
	INC LOOP1
	CMP LOOP1,4
	JNE MATLOOP1
	
	 MOV CL,0B	  
     MOV DL,100B 	 
     ADD CH,0110B	;y canto superior esquerdo
     ADD DH,0110B    ;y canto inferior direito      
	 INC LOOP2
	 MOV LOOP1,0
	 CMP LOOP2,4
	 JNE MATLOOP1
	
	RET
	
MATRIZ ENDP

PROC NUM
	CMP TIPO,1
	JNE NUMFIM1
	JMP NUMFIM
	NUMFIM1:

	;variaveis de parametros
	MOV AH,0
	MOV AL,48
	MUL NUMX
	MOV NUMX,AX
	ADD NUMXSOMA,40
	MOV CX,NUMX
	ADD NUMXSOMA,CX
	
	MOV AH,0
	MOV AL,48
	MUL NUMY
	MOV NUMY,AX
	ADD NUMYSOMA,40
	MOV CX,NUMY
	ADD NUMYSOMA,CX
	;comparadores
	
	CMP TIPO,2
	JE TIPO2
	
	CMP TIPO,3
	JE TIPO4
	
	CMP TIPO,4
	JE TIPO8
	
	CMP TIPO,5
	JE TIPO16
	
	CMP TIPO,6
	JE TIPO32
	
	CMP TIPO,7
	JE TIPO64
	
	CMP TIPO,8
	JE TIPO128

	CMP TIPO,9
	JE  TIPO256
	
	CMP TIPO,10
	JE TIPO512
	
	CMP TIPO,11
	JE TIPO1024
	
	CMP TIPO,12
	JE  TIPO2048
	JMP NUMFIM
	TIPO2:
	MOV COR,15
	LEA SI,NUM2
	JMP NUMINICIO
	
	TIPO4:
	MOV COR,65
	LEA SI,NUM4
	JMP NUMINICIO
	
	TIPO8:
	MOV COR,64
	LEA SI,NUM8
	JMP NUMINICIO
	
	TIPO16:
	MOV COR,63
	LEA SI,NUM16
	JMP NUMINICIO
	
	TIPO32:
	MOV COR,62 
	LEA SI,NUM32
	JMP NUMINICIO
	
	TIPO64:
	MOV COR,61
	LEA SI,NUM64
	JMP NUMINICIO
	
	TIPO128:
	MOV COR,43
	LEA SI,NUM128
	JMP NUMINICIO
	
	TIPO256:
	MOV COR,44
	LEA SI,NUM256
	JMP NUMINICIO
	
	TIPO512:
	MOV COR,42
	LEA SI,NUM512
	JMP NUMINICIO
	
	TIPO1024:
	MOV COR,41
	LEA SI,NUM1024
	JMP NUMINICIO
	
	TIPO2048:
	MOV COR,115
	LEA SI,NUM2048
	JMP NUMINICIO
	
	NUMINICIO: 
      MOV CX,NUMX
      MOV DX,NUMY
      NUM2LOOP:
  	  MOV AH,0CH
    ;  mov al,COR	  ;0010B VERDE
	  MOV BL,[SI]
	  ADD SI,1
	  CMP BL,0
	  JNE NUM2N
	  JE NUM2S
	  NUM2S:
		MOV AL,COR   ;00000100B ;cor 1, fundo
		JMP NUM2FIM
	  NUM2N:  
		MOV AL,000B ;cor 2	numero
	  NUM2FIM:
      
      INT 10h
	  INC CX
      CMP CX,NUMXSOMA
      JNE NUM2LOOP
	  
	  ;loop2
	  MOV CX,NUMX
      INC DX
      CMP DX,NUMYSOMA
      JNE NUM2LOOP
	  
	  MOV NUMXSOMA,0
	  MOV NUMYSOMA,0
	NUMFIM:
	  RET
NUM ENDP

PROC MENU

		MOV 	AH,9H
		LEA 	DX,MSG6
		INT 	21H
		MOV 	AH,9H
		LEA 	DX,MSG7
		INT 	21H
		CALL LF
		CALL LF
	
		MOV 	AH,9H
		LEA 	DX,MSG8
		INT 	21H
		CALL LF
		MOV 	AH,9H
		LEA 	DX,MSG9
		INT 	21H
		CALL LF
		CALL LF
		
		MOV 	AH,9H
		LEA 	DX,MSG10
		INT 	21H
		MENU1:
		MOV AH,1
		INT 21H
		CMP AL,'0'
		JNE MENUFIM1
		MOV AX,03H
		INT 10H
		MOV AH,4CH
		INT 21H
		MENUFIM1:
		CALL LIMPA

RET
MENU ENDP

;############################################################# LOGIC ############################################################
PROC WINORLOSE
	MOV FLAG2,1
	MOV LOOP1,0
	LEA SI,VET
	WINLOOP1:
	MOV DH,[SI]
	CMP DH,1
	JE 	WINTEM1
	CMP DH,12
	JE	WIN
	
	JMP WINCONTINUA1
	WIN:
	CALL VENCEU
	WINTEM1:
	MOV FLAG2,2
	WINCONTINUA1:
	INC LOOP1
	INC SI
	CMP LOOP1,16
	JNE WINLOOP1
	CMP FLAG2,2
	JNE WINCONTINUA2
	RET
	WINCONTINUA2:
	MOV FLAG2,1
	MOV FLAG3,1
	MOV AUXAUXDH,16
    MOV AUXAUXDL,15
	LEA SI,VET
	ADD SI,15
	MOV AUXDH,16
	MOV AUXDL,15
	MOV LOOP2,4
	MOV LOOP1,3
	MOV LOOP3,3
	WINHLOOP:
	DEC AUXDH
	MOV DH,[SI]
	DEC SI
	DEC AUXDL
	MOV BH,[SI]
	CMP DH,BH
	JNE	WINHSAI
	
	MOV FLAG2,2
	JMP WINHSAI
	WINHLOOP2:
	JMP WINHLOOP
	WINHSAI:
	CMP LOOP3,0
	DEC LOOP3
	JNE WINHLOOP
	
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP3,3
	CMP LOOP1,0
	DEC LOOP1
	JNZ WINHLOOP2
	
	SUB AUXAUXDH,4
	SUB AUXAUXDL,4
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP1,3
	CMP LOOP2,0
	DEC LOOP2
	JNZ WINHLOOP2
	
	MOV AUXAUXDH,19
    MOV AUXAUXDL,15
	LEA SI,VET
	ADD SI,15
	MOV AUXDH,19
	MOV AUXDL,15
	MOV LOOP2,4
	MOV LOOP1,3
	MOV LOOP3,3
	WINDLOOP:
	SUB AUXDH,4
	MOV DH,[SI]
	SUB SI,4
	SUB AUXDL,4
	MOV BH,[SI]
	CMP DH,BH
	JNE	WINDSAI
	
	MOV FLAG3,2 
		
	JMP WINDSAI
	WINDLOOP2:
	JMP WINDLOOP
	WINDSAI:
	CMP LOOP3,0
	DEC LOOP3
	JNE WINDLOOP
	
	
	
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP3,3
	CMP LOOP1,0
	DEC LOOP1
	JNZ WINDLOOP2
	
	SUB AUXAUXDH,1
	SUB AUXAUXDL,1
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP1,3
	CMP LOOP2,0
	DEC LOOP2
	JNZ WINDLOOP2
	
	CMP FLAG2,2
	JE WINDFIM
	CMP FLAG3,2
	JE WINDFIM
	
	CALL PERDEU
	
	WINDFIM:
	RET

WINORLOSE ENDP


PROC VENCEU
	CALL LIMPA
		MOV 	AH,9H
		LEA 	DX,MSG2
		INT 	21H
		MOV 	AH,9H
		LEA 	DX,MSG4
		INT 	21H
		MOV CX,JOGADAS
		CALL SAI_DEC
		MOV 	AH,9H
		LEA 	DX,MSG5
		INT 	21H
		CALL LF
		MOV 	AH,9H
		LEA 	DX,MSG3
		INT 	21H

		VENCEULOOP:
		MOV AH,1
		INT 21H
		CMP AL,'n'
		JE VENCEUFIM
		CMP AL,'y'
		JE REINICIAR3
		JMP PERDEULOOP
		REINICIAR3:
		CALL REINICIAR
		
		VENCEUFIM:
		MOV AX,03H
		INT 10H
		MOV AH,4CH
		INT 21H
		
VENCEU ENDP

PROC PERDEU
		CALL LIMPA
		MOV 	AH,9H
		LEA 	DX,MSG1
		INT 	21H
		MOV 	AH,9H
		LEA 	DX,MSG4
		INT 	21H
		MOV CX,JOGADAS
		CALL SAI_DEC
		MOV 	AH,9H
		LEA 	DX,MSG5
		INT 	21H
		CALL LF
		MOV 	AH,9H
		LEA 	DX,MSG3
		INT 	21H
		PERDEULOOP:
		MOV AH,1
		INT 21H
		CMP AL,'n'
		JE PERDEUFIM
		CMP AL,'y'
		JE REINICIAR2
		JMP PERDEULOOP
		REINICIAR2:
		CALL REINICIAR

		PERDEUFIM:
		MOV AX,03H
		INT 10H
		MOV AH,4CH
		INT 21H

PERDEU ENDP

PROC REINICIAR

	MOV LOOP1,0
	LEA DI,VET
	MOV DI,0
	MOV VET[DI],1
	ADD DI,15
	ZERALOOP1:
	
	MOV VET[DI],1
	
	INC LOOP1
	CMP LOOP1,3
	DEC DI
	JNE ZERALOOP1
	MOV JOGADAS,0
	MOV FLAG1,2
	
	JMP MAINNOVAMENTE

REINICIAR ENDP

	PROC ESQ
 CALL HORIZONTAL2
 
 MOV AUXAUXDH,16
    MOV AUXAUXDL,15
	LEA SI,VET
	ADD SI,15
	MOV AUXDH,16
	MOV AUXDL,15
	MOV LOOP2,4
	MOV LOOP1,3
	MOV LOOP3,3
	ESQLOOP:
	DEC AUXDH
	MOV DH,[SI]
	DEC SI
	DEC AUXDL
	MOV BH,[SI]

	LEA DI,VET
	CMP BH,1
	JNE ESQSAI
	CMP DH,1
	JE ESQSAI
	MOV FLAG1,2
	MOV DI,AUXDL
	MOV VET[DI],DH
	MOV DI,AUXDH
	MOV VET[DI],1
	
	JMP ESQSAI
	ESQLOOP2:
	JMP ESQLOOP
	ESQSAI:
	CMP LOOP3,0
	DEC LOOP3
	JNE ESQLOOP

	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP3,3
	CMP LOOP1,0
	DEC LOOP1
	JNZ ESQLOOP2
	
	SUB AUXAUXDH,4
	SUB AUXAUXDL,4
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP1,3
	CMP LOOP2,0
	DEC LOOP2
	JNZ ESQLOOP2
	
	RET

ESQ ENDP

PROC DIR
	CALL HORIZONTAL
	
	MOV AUXAUXDH,16
    MOV AUXAUXDL,15
	LEA SI,VET
	ADD SI,15
	MOV AUXDH,16
	MOV AUXDL,15
	MOV LOOP2,4
	MOV LOOP1,3
	MOV LOOP3,3
	DIRLOOP:
	DEC AUXDH
	MOV DH,[SI]
	DEC SI
	DEC AUXDL
	MOV BH,[SI]

	LEA DI,VET
	CMP DH,1
	JNE DIRSAI
	CMP BH,1
	JE  DIRSAI
	MOV DI,AUXDH
	MOV VET[DI],BH
	MOV DI,AUXDL
	MOV VET[DI],1
	MOV FLAG1,2
	
	JMP DIRSAI
	DIRLOOP2:
	JMP DIRLOOP
	DIRSAI:
	CMP LOOP3,0
	DEC LOOP3
	JNE DIRLOOP
	
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP3,3
	CMP LOOP1,0
	DEC LOOP1
	JNZ DIRLOOP2
	
	SUB AUXAUXDH,4
	SUB AUXAUXDL,4
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP1,3
	CMP LOOP2,0
	DEC LOOP2
	JNZ DIRLOOP2
	RET
DIR ENDP

PROC HORIZONTAL
	;DIR
	MOV TESTET,3
	MOV TESTE1,0
	MOV AUXAUXDH,15
    MOV AUXAUXDL,15
	LEA SI,VET
	ADD SI,15
	MOV AUXDH,15
	MOV AUXDL,15
	MOV LOOP2,4
	MOV LOOP1,3
	;MOV LOOP3,2
	HORLOOP:
	MOV DH,[SI]
	CMP DH,1
	JE HORSAI
	HORN1:
	DEC SI
	DEC AUXDL
	MOV BH,[SI]
	
	CMP BH,1
	JNE	HORCONTINUA
	MOV CH,TESTET
	
	INC TESTE1
	CMP TESTE1,CH
	
	JNE HORN1
	
	JMP HORFIM
	
	HORCONTINUA:
	
	CMP BH,DH
	JNE HORSAI
	CMP BH,1
	JE HORSAI
	
	LEA DI,VET
	MOV DI,AUXDH
	INC BH
	MOV VET[DI],BH
	MOV DI,AUXDL
	MOV VET[DI],1
	MOV FLAG1,2
	
	JMP HORSAI
	HORLOOP2:
	JMP HORLOOP
	HORSAI:
		
	DEC AUXDH
	LEA SI,VET
	ADD SI,AUXDH
	MOV CX,AUXDH
	MOV AUXDL,CX
	DEC TESTET
	
	CMP LOOP1,0
	DEC LOOP1
	JNZ HORLOOP2

	HORFIM:
	SUB AUXAUXDH,4
	SUB AUXAUXDL,4
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP1,3
	MOV TESTE1,0
	MOV TESTET,3
	CMP LOOP2,0
	DEC LOOP2
	JNZ HORLOOP2

	RET
HORIZONTAL ENDP

PROC HORIZONTAL2
	;ESQ
	MOV TESTET,3
	MOV TESTE1,0
	MOV AUXAUXDH,12
    MOV AUXAUXDL,12
	LEA SI,VET
	ADD SI,12
	MOV AUXDH,12
	MOV AUXDL,12
	MOV LOOP2,4
	MOV LOOP1,3
	;MOV LOOP3,2
	HOR2LOOP:
	MOV DH,[SI]
	CMP DH,1
	JE HOR2SAI
	HOR2N1:
	INC SI
	INC AUXDL
	MOV BH,[SI]
	
	CMP BH,1
	JNE	HOR2CONTINUA
	MOV CH,TESTET
	
	INC TESTE1
	CMP TESTE1,CH
	
	JNE HOR2N1
	
	JMP HOR2FIM
	
	HOR2CONTINUA:

	CMP BH,DH
	JNE HOR2SAI
	CMP BH,1
	JE HOR2SAI
	
	LEA DI,VET
	MOV DI,AUXDH
	INC BH
	MOV VET[DI],BH
	MOV DI,AUXDL
	MOV VET[DI],1
	MOV FLAG1,2
	
	JMP HOR2SAI
	HOR2LOOP2:
	JMP HOR2LOOP
	HOR2SAI:
		
	INC AUXDH
	LEA SI,VET
	ADD SI,AUXDH
	MOV CX,AUXDH
	MOV AUXDL,CX
	DEC TESTET
	
	CMP LOOP1,0
	DEC LOOP1
	JNZ HOR2LOOP2
	

	HOR2FIM:
	SUB AUXAUXDH,4
	SUB AUXAUXDL,4
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP1,3
	MOV TESTE1,0
	MOV TESTET,3
	CMP LOOP2,0
	DEC LOOP2
	JNZ HOR2LOOP2

	RET
HORIZONTAL2 ENDP

PROC CIM
	CALL VERTICAL2
	
	MOV AUXAUXDH,19
    MOV AUXAUXDL,15
	LEA SI,VET
	ADD SI,15
	MOV AUXDH,19
	MOV AUXDL,15
	MOV LOOP2,4
	MOV LOOP1,3
	MOV LOOP3,3
	CIMLOOP:
	SUB AUXDH,4
	MOV DH,[SI]
	SUB SI,4
	SUB AUXDL,4
	MOV BH,[SI]

	LEA DI,VET
	CMP BH,1
	JNE CIMSAI
	CMP DH,1
	JE CIMSAI
	MOV DI,AUXDL
	MOV VET[DI],DH
	MOV DI,AUXDH
	MOV VET[DI],1
	MOV FLAG1,2
	
	JMP CIMSAI
	CIMLOOP2:
	JMP CIMLOOP
	CIMSAI:
	
	CMP LOOP3,0
	DEC LOOP3
	JNE CIMLOOP
	
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP3,3
	CMP LOOP1,0
	DEC LOOP1
	JNZ CIMLOOP2

	SUB AUXAUXDH,1
	SUB AUXAUXDL,1
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP1,3
	CMP LOOP2,0
	DEC LOOP2
	JNZ CIMLOOP2
	
	RET

CIM ENDP


PROC BAI
	
		CALL VERTICAL

MOV AUXAUXDH,19
    MOV AUXAUXDL,15
	LEA SI,VET
	ADD SI,15
	MOV AUXDH,19
	MOV AUXDL,15
	MOV LOOP2,4
	MOV LOOP1,3
	MOV LOOP3,3
	BAILOOP:
	SUB AUXDH,4
	MOV DH,[SI]
	SUB SI,4
	SUB AUXDL,4
	MOV BH,[SI]

	LEA DI,VET
	CMP DH,1
	JNE BAISAI
	CMP BH,1
	JE  BAISAI
	MOV DI,AUXDH
	MOV VET[DI],BH
	MOV DI,AUXDL
	MOV VET[DI],1
	MOV FLAG1,2
	
	JMP BAISAI
	BAILOOP2:
	JMP BAILOOP
	BAISAI:

	CMP LOOP3,0
	DEC LOOP3
	JNE BAILOOP
	
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP3,3
	CMP LOOP1,0
	DEC LOOP1
	JNZ BAILOOP2
	
	SUB AUXAUXDH,1
	SUB AUXAUXDL,1
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP1,3
	CMP LOOP2,0
	DEC LOOP2
	JNZ BAILOOP2
	
	RET


BAI ENDP

PROC VERTICAL
	;BAI
	MOV TESTET,3
	MOV TESTE1,0
	MOV AUXAUXDH,15
    MOV AUXAUXDL,15
	LEA SI,VET
	ADD SI,15
	MOV AUXDH,15
	MOV AUXDL,15
	MOV LOOP2,4
	MOV LOOP1,3
	;MOV LOOP3,2
	VERLOOP:
	MOV DH,[SI]
	CMP DH,1
	JE VERSAI
	VERN1:
	SUB SI,4
	SUB AUXDL,4
	MOV BH,[SI]
	
	CMP BH,1
	JNE	VERCONTINUA
	MOV CL,TESTET
	INC TESTE1
	CMP TESTE1,CL
	
	JNE VERN1
	JMP VERFIM
	
	VERCONTINUA:
	
	CMP BH,DH
	JNE VERSAI
	CMP BH,1
	JE VERSAI
	
	LEA DI,VET
	MOV DI,AUXDH
	INC BH
	MOV VET[DI],BH
	MOV DI,AUXDL
	MOV VET[DI],1
	MOV FLAG1,2
	JMP VERSAI
	VERLOOP2:
	JMP VERLOOP
	VERSAI:
		
	SUB AUXDH,4
	LEA SI,VET
	ADD SI,AUXDH
	MOV CX,AUXDH
	MOV AUXDL,CX
	DEC TESTET
	
	CMP LOOP1,0
	DEC LOOP1
	JNZ VERLOOP2
	
	VERFIM:
	SUB AUXAUXDH,1
	SUB AUXAUXDL,1
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP1,3
	MOV TESTE1,0
	MOV TESTET,3
	CMP LOOP2,0
	DEC LOOP2
	JNZ VERLOOP2

	RET

VERTICAL ENDP

PROC VERTICAL2
	;CIM
	MOV TESTET,3
	MOV TESTE1,0
	MOV AUXAUXDH,4
    MOV AUXAUXDL,4
	LEA SI,VET
	;ADD SI,12
	MOV AUXDH,0  
	MOV AUXDL,0
	MOV LOOP2,4
	MOV LOOP1,3
	;MOV LOOP3,2
	VER2LOOP:
	MOV DH,[SI]
	CMP DH,1
	JE VER2SAI
	VER2N1:
	ADD SI,4
	ADD AUXDL,4
	MOV BH,[SI]
	
	CMP BH,1
	JNE	VER2CONTINUA
	MOV CL,TESTET
	INC TESTE1
	CMP TESTE1,CL
	
	JNE VER2N1
	JMP VER2FIM
	
	VER2CONTINUA:
	
	CMP BH,DH
	JNE VER2SAI
	CMP BH,1
	JE VER2SAI
	
	LEA DI,VET
	MOV DI,AUXDH
	INC BH
	MOV VET[DI],BH
	MOV DI,AUXDL
	MOV VET[DI],1
	MOV FLAG1,2
	JMP VER2SAI
	VER2LOOP2:
	JMP VER2LOOP
	VER2SAI:
		
	ADD AUXDH,4
	LEA SI,VET
	ADD SI,AUXDH
	MOV CX,AUXDH
	MOV AUXDL,CX
	DEC TESTET
	
	CMP LOOP1,0
	DEC LOOP1
	JNZ VER2LOOP2
	

	VER2FIM:
	SUB AUXAUXDH,1
	SUB AUXAUXDL,1
	LEA SI,VET
	ADD SI,AUXAUXDL
	MOV DX,AUXAUXDH
	MOV AUXDH,DX
	MOV DX,AUXAUXDL
	MOV AUXDL,DX
	MOV LOOP1,3
	MOV TESTE1,0
	MOV TESTET,3
	CMP LOOP2,0
	DEC LOOP2
	JNZ VER2LOOP2

	RET

VERTICAL2 ENDP



N2E4 PROC

	MOV COUNT2,0
	MOV COUNT,0
	XOR BX,BX
	MOV LOOP1,16
	N2E4LOOP1:
	MOV LOOP2,3000
	N2E4LOOP2:
	CMP LOOP2,0
	DEC LOOP2
	JNE N2E4LOOP2

   MOV AH, 00h       
   INT 1AH        
   
    MOV AL,DL
	MOV CL,2
	CWD
	DIV CL
	
	
	CMP AH,0
	JNE N2E4FIM
	ADD COUNT,1B
	N2E4FIM:
	CMP LOOP1,0
	DEC LOOP1
	JNE N2E4LOOP1
	MOV BH,0
	

	CMP COUNT,15
	JNL N2E4PRINTA2
	MOV NN2E4,2
	JMP N2E4FIM2
	
	N2E4PRINTA2:
	MOV NN2E4,3
	N2E4FIM2:
RET

N2E4 ENDP

PROC LUGAR
	MOV COUNT2,0
	MOV COUNT,0
	XOR BX,BX
	MOV LOOP1,16
	LUGARLOOP1:
	MOV LOOP2,3000
	LUGARLOOP2:
	CMP LOOP2,0
	DEC LOOP2
	JNE LUGARLOOP2

   MOV AH, 00h       
   INT 1AH        
   
    MOV AL,DL
	MOV CL,2
	CWD
	DIV CL

	CMP AH,0
	JNE LUGARFIM
	ADD COUNT,1B
	LUGARFIM:
	CMP LOOP1,0
	DEC LOOP1
	JNE LUGARLOOP1
	MOV BH,0

	LUGARINICIO:
	CMP COUNT,16
	JNE	LUGARCONTINUA
	MOV COUNT,0
	LUGARCONTINUA:
	
	LEA SI,VET
	ADD SI,COUNT
	MOV DL,[SI]
	CMP DL,1
	JNE LUGARCONTINUA2
	
	LEA DI,VET
	MOV DI,COUNT
	CALL N2E4
	MOV DX,NN2E4
	MOV VET[DI],DL
	JMP LUGARFIM2
	LUGARCONTINUA2:
	CMP COUNT2,15
	INC COUNT2
	JE LUGARFIM2 ;se essa condição for verdadeira fim de jogo
	INC COUNT
	JMP	LUGARINICIO
	
	LUGARFIM2:
	
RET
	
	

LUGAR ENDP
;##################################################### AXILIARY FUNCTIONS #############################################################

PROC DELAY
	MOV LOOP1,1
	DELAYLOOP2:
	MOV LOOP2,0FFFFH
	DELAYLOOP:
	CMP LOOP2,0
	DEC LOOP2
	JNE DELAYLOOP
	CMP LOOP1,0
	DEC LOOP1
	JNZ DELAYLOOP2 
	RET
	
DELAY ENDP
LF PROC
;PULAR LINHA
	MOV AH,2	
	MOV DL,0AH	;pula linha
	INT 21H
	MOV DL,0DH	;volta cursor
	INT 21H
	RET
LF ENDP

SAI_DEC PROC

		MOV 	AX,CX
		
		PUSH 	AX
		PUSH 	BX
		PUSH 	CX
		PUSH 	DX 		;salva na pilha os registradores usados
		OR 		AX,AX 	;prepara comparação de sinal
		JGE 	DECPT1 	;se AX maior ou igual a 0, vai para PT1
		PUSH 	AX 		;como AX menor que 0, salva o número na pilha
		MOV 	DL,'-'	;prepara o caracter ' - ' para sair
		MOV 	AH,2h 	;prepara exibição
		INT 	21h 	;exibe ' - '
		POP 	AX 		;recupera o número
		NEG 	AX 		;troca o sinal de AX (AX = - AX)
		
		;obtendo dígitos decimais e salvando-os temporariamente na pilha
DECPT1: 	XOR 	CX,CX 	;inicializa CX como contador de dígitos
		MOV 	BX,10 	;BX possui o divisor
DECPT2: 	XOR 	DX,DX 	;inicializa o byte alto do dividendo em 0; restante é AX
		DIV 	BX 		;após a execução, AX = quociente; DX = resto
		PUSH 	DX 		;salva o primeiro dígito decimal na pilha (1o. resto)
		INC 	CX 		;contador = contador + 1
		OR 		AX,AX 	;quociente = 0 ? (teste de parada)
		JNE 	DECPT2 	;não, continuamos a repetir o laço
		
		;exibindo os dígitos decimais (restos) no monitor, na ordem inversa
		MOV 	AH,2h 	;sim, termina o processo, prepara exibição dos restos
DECPT3: 	POP 	DX 		;recupera dígito da pilha colocando-o em DL (DH = 0)
		ADD 	DL,30h 	;converte valor binário do dígito para caracter ASCII
		INT 	21h 	;exibe caracter
		LOOP 	DECPT3 	;realiza o loop ate que CX = 0
		POP 	DX 		;restaura o conteúdo dos registros
		POP 	CX
		POP 	BX
		POP 	AX 		;restaura os conteúdos dos registradores
		RET 			;retorna à rotina que chamou
		
SAI_DEC ENDP

PROC LIMPA
	MOV AX,13H  ;03h
	INT 10h
	RET
LIMPA ENDP
END MAIN